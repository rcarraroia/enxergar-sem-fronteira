-- =====================================================
-- TESTES DE VALIDA√á√ÉO DAS CORRE√á√ïES DE SEGURAN√áA RLS
-- =====================================================
-- Descri√ß√£o: Valida se as corre√ß√µes de seguran√ßa est√£o funcionando corretamente

-- ============================================================================
-- CONFIGURA√á√ÉO DOS TESTES
-- ============================================================================

-- Criar usu√°rios de teste tempor√°rios (se n√£o existirem)
INSERT INTO auth.users (id, email, encrypted_password, email_confirmed_at, created_at, updated_at)
VALUES 
    ('11111111-1111-1111-1111-111111111111', 'test.organizer@test.com', 'encrypted', now(), now(), now()),
    ('22222222-2222-2222-2222-222222222222', 'test.admin@test.com', 'encrypted', now(), now(), now())
ON CONFLICT (id) DO NOTHING;

-- Criar organizers de teste
INSERT INTO public.organizers (id, name, email, status, role)
VALUES 
    ('11111111-1111-1111-1111-111111111111', 'Test Organizer', 'test.organizer@test.com', 'active', 'organizer'),
    ('22222222-2222-2222-2222-222222222222', 'Test Admin', 'test.admin@test.com', 'active', 'admin')
ON CONFLICT (id) DO UPDATE SET 
    role = EXCLUDED.role,
    status = EXCLUDED.status;

-- ============================================================================
-- TESTE 1: VERIFICAR FUN√á√ÉO is_admin_user()
-- ============================================================================

\echo 'üß™ TESTE 1: Verificando fun√ß√£o is_admin_user()'

-- Simular contexto de usu√°rio organizador comum
SELECT set_config('request.jwt.claims', '{"sub": "11111111-1111-1111-1111-111111111111"}', true);
SELECT 
    CASE 
        WHEN is_admin_user() = false THEN '‚úÖ PASSOU: Organizador comum n√£o √© admin'
        ELSE '‚ùå FALHOU: Organizador comum detectado como admin'
    END as test_result;

-- Simular contexto de usu√°rio admin
SELECT set_config('request.jwt.claims', '{"sub": "22222222-2222-2222-2222-222222222222"}', true);
SELECT 
    CASE 
        WHEN is_admin_user() = true THEN '‚úÖ PASSOU: Admin detectado corretamente'
        ELSE '‚ùå FALHOU: Admin n√£o detectado'
    END as test_result;

-- ============================================================================
-- TESTE 2: VERIFICAR POL√çTICAS RLS PARA EVENTS
-- ============================================================================

\echo 'üß™ TESTE 2: Verificando pol√≠ticas RLS para events'

-- Criar evento de teste
INSERT INTO public.events (id, title, address, location, organizer_id, status)
VALUES 
    ('test-event-1', 'Evento Teste Organizador', 'Rua Teste', 'Local Teste', '11111111-1111-1111-1111-111111111111', 'active'),
    ('test-event-2', 'Evento Teste Admin', 'Rua Admin', 'Local Admin', '22222222-2222-2222-2222-222222222222', 'draft')
ON CONFLICT (id) DO UPDATE SET 
    title = EXCLUDED.title,
    organizer_id = EXCLUDED.organizer_id,
    status = EXCLUDED.status;

-- Teste como usu√°rio n√£o autenticado
SELECT set_config('request.jwt.claims', '{}', true);
SELECT set_config('role', 'anon', true);

SELECT 
    CASE 
        WHEN COUNT(*) = 1 AND MAX(status) = 'active' THEN '‚úÖ PASSOU: Usu√°rio an√¥nimo v√™ apenas eventos ativos'
        ELSE '‚ùå FALHOU: Usu√°rio an√¥nimo tem acesso incorreto'
    END as test_result
FROM public.events;

-- Teste como organizador comum
SELECT set_config('request.jwt.claims', '{"sub": "11111111-1111-1111-1111-111111111111"}', true);
SELECT set_config('role', 'authenticated', true);

SELECT 
    CASE 
        WHEN COUNT(*) >= 1 THEN '‚úÖ PASSOU: Organizador v√™ seus eventos'
        ELSE '‚ùå FALHOU: Organizador n√£o v√™ seus eventos'
    END as test_result
FROM public.events 
WHERE organizer_id = '11111111-1111-1111-1111-111111111111';

-- Teste como admin
SELECT set_config('request.jwt.claims', '{"sub": "22222222-2222-2222-2222-222222222222"}', true);

SELECT 
    CASE 
        WHEN COUNT(*) >= 2 THEN '‚úÖ PASSOU: Admin v√™ todos os eventos'
        ELSE '‚ùå FALHOU: Admin n√£o v√™ todos os eventos'
    END as test_result
FROM public.events;

-- ============================================================================
-- TESTE 3: VERIFICAR POL√çTICAS RLS PARA ORGANIZERS
-- ============================================================================

\echo 'üß™ TESTE 3: Verificando pol√≠ticas RLS para organizers'

-- Teste como organizador comum (deve ver apenas seus dados)
SELECT set_config('request.jwt.claims', '{"sub": "11111111-1111-1111-1111-111111111111"}', true);

SELECT 
    CASE 
        WHEN COUNT(*) = 1 AND MAX(email) = 'test.organizer@test.com' THEN '‚úÖ PASSOU: Organizador v√™ apenas seus dados'
        ELSE '‚ùå FALHOU: Organizador tem acesso incorreto'
    END as test_result
FROM public.organizers;

-- Teste como admin (deve ver todos)
SELECT set_config('request.jwt.claims', '{"sub": "22222222-2222-2222-2222-222222222222"}', true);

SELECT 
    CASE 
        WHEN COUNT(*) >= 2 THEN '‚úÖ PASSOU: Admin v√™ todos os organizers'
        ELSE '‚ùå FALHOU: Admin n√£o v√™ todos os organizers'
    END as test_result
FROM public.organizers;

-- ============================================================================
-- TESTE 4: VERIFICAR POL√çTICAS RLS PARA NOTIFICATION_TEMPLATES
-- ============================================================================

\echo 'üß™ TESTE 4: Verificando pol√≠ticas RLS para notification_templates'

-- Teste como organizador comum (n√£o deve ter acesso)
SELECT set_config('request.jwt.claims', '{"sub": "11111111-1111-1111-1111-111111111111"}', true);

SELECT 
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ PASSOU: Organizador comum n√£o acessa templates'
        ELSE '‚ùå FALHOU: Organizador comum tem acesso indevido'
    END as test_result
FROM public.notification_templates;

-- Teste como admin (deve ter acesso total)
SELECT set_config('request.jwt.claims', '{"sub": "22222222-2222-2222-2222-222222222222"}', true);

SELECT 
    CASE 
        WHEN COUNT(*) >= 0 THEN '‚úÖ PASSOU: Admin tem acesso aos templates'
        ELSE '‚ùå FALHOU: Admin n√£o tem acesso aos templates'
    END as test_result
FROM public.notification_templates;

-- ============================================================================
-- TESTE 5: VERIFICAR SE RLS EST√Å HABILITADO
-- ============================================================================

\echo 'üß™ TESTE 5: Verificando se RLS est√° habilitado nas tabelas cr√≠ticas'

SELECT 
    tablename,
    CASE 
        WHEN rowsecurity = true THEN '‚úÖ RLS HABILITADO'
        ELSE '‚ùå RLS DESABILITADO'
    END as rls_status
FROM pg_tables 
WHERE schemaname = 'public' 
AND tablename IN ('events', 'registrations', 'patients', 'organizers', 'notification_templates', 'reminder_jobs')
ORDER BY tablename;

-- ============================================================================
-- TESTE 6: VERIFICAR POL√çTICAS PERIGOSAS REMOVIDAS
-- ============================================================================

\echo 'üß™ TESTE 6: Verificando se pol√≠ticas perigosas foram removidas'

SELECT 
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ PASSOU: Pol√≠ticas perigosas removidas'
        ELSE '‚ùå FALHOU: Ainda existem pol√≠ticas perigosas'
    END as test_result
FROM pg_policies 
WHERE schemaname = 'public' 
AND (
    policyname LIKE '%public%reading%' OR
    policyname LIKE '%true%' OR
    qual = 'true'
);

-- ============================================================================
-- LIMPEZA DOS TESTES
-- ============================================================================

\echo 'üßπ Limpando dados de teste...'

-- Remover eventos de teste
DELETE FROM public.events WHERE id IN ('test-event-1', 'test-event-2');

-- Remover organizers de teste (manter se necess√°rio para outros testes)
-- DELETE FROM public.organizers WHERE id IN ('11111111-1111-1111-1111-111111111111', '22222222-2222-2222-2222-222222222222');

-- Resetar configura√ß√µes
SELECT set_config('request.jwt.claims', '{}', true);
SELECT set_config('role', 'anon', true);

\echo '‚úÖ TESTES DE SEGURAN√áA RLS CONCLU√çDOS'
\echo 'üìã Revisar resultados acima para identificar falhas'
\echo 'üîß Corrigir pol√≠ticas que falharam nos testes'